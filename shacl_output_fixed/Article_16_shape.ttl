```turtle
@prefix : <http://example.org#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:IncidentReportShape a sh:NodeShape ;
    sh:targetClass :IncidentReport ;
    sh:property [
        sh:path :notificationTime ;
        sh:datatype xsd:dateTime ;
        sh:minCount 1 ;
        sh:message "Incident notification time must be provided." ;
        sh:severity sh:Violation
    ], [
        sh:path :incidentType ;
        sh:minCount 1 ;
        sh:message "Incident type must be specified." ;
        sh:severity sh:Violation
    ], [
        sh:path :affectedUsers ;
        sh:datatype xsd:integer ;
        sh:minCount 1 ;
        sh:message "Number of affected users must be provided." ;
        sh:severity sh:Violation
    ], [
        sh:path :dataClassification ;
        sh:in (:SecretClassified, :Confidential, :Public) ;
        sh:message "Data classification must be one of: Secret Classified, Confidential, Public." ;
        sh:severity sh:Violation
    ], [
        sh:path :severity ;
        sh:in (:High, :Medium, :Low) ;
        sh:message "Severity must be one of: High, Medium, Low." ;
        sh:severity sh:Violation ;
        sh:sparql [
            sh:select """
                SELECT $this WHERE {
                  ?report :affectedUsers ?users ;
                    :dataClassification ?classification .
                  FILTER(?users >= 10 && ?classification = :SecretClassified) .
                  BIND(IRI(:High) AS $this)
                }
            """ ;
            sh:message "If affected users are 10 or more and data classification is Secret Classified, then severity MUST be High."
        ]
    ], [
        sh:path :earlyWarningNotificationTime ;
        sh:datatype xsd:dateTime ;
        sh:minCount 1 ;
        sh:message "Early warning notification time must be provided." ;
        sh:severity sh:Violation ;
        sh:sparql [
            sh:select """
              SELECT $this WHERE {
                ?report :notificationTime ?notificationTime ;
                  :earlyWarningNotificationTime ?earlyWarningTime .
                FILTER(xsd:dateTime(?notificationTime) - xsd:dateTime(?earlyWarningTime) > "PT24H") .
                BIND(IRI(:Violation) as $this)
              }
            """ ;
            sh:message "Early warning notification must be sent within 24 hours before the incident notification."
        ]
    ], [
        sh:path :incidentNotificationTime ;
        sh:datatype xsd:dateTime ;
        sh:minCount 1 ;
        sh:message "Incident notification time must be provided." ;
        sh:severity sh:Violation ;
        sh:sparql [
            sh:select """
                SELECT $this WHERE {
                  ?report :incidentNotificationTime ?incidentTime .
                  FILTER(xsd:dateTime(?incidentTime) > xsd:dateTime("2024-01-01T00:00:00Z")) .  
                  BIND(IRI(:Violation) as $this)
                }
            """ ;
            sh:message "Incident notification time must be after 2024-01-01T00:00:00Z (Example Time Constraint)."
        ]
    ] .

```